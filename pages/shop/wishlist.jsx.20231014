import React, { useEffect, useState } from "react";
import Container from "~/components/layouts/Container";
import BreadCrumb from "~/components/elements/BreadCrumb";
import Shop from "~/components/partials/shop/Shop";
import { useRouter, connect } from "next/router";
import Link from "next/link";
import { caculateArrayQuantity } from "~/utilities/ecomerce-helpers";
import useEcomerce from "~/hooks/useEcomerce";
import ModuleEcomerceWishlist from "~/components/ecomerce/modules/ModuleEcomerceWishlist";
import SkeletonTable from "~/components/elements/skeletons/SkeletonTable";
import { Result } from "antd";
import axios from "axios";
import { useDispatch, useSelector } from "react-redux";
import { URL_BD_MR, URL_IMAGES_RESULTS } from "../../helpers/Constants";
import { Box, Grid, Button } from "@mui/material";
import { myNumber } from "../../utilities/ArrayFunctions";
import ModalMensajesWishList from "../../pages/mensajes/ModalMensajesWishList";
import { getDataWishList } from "../../store/datawishlist/action";
import LoadingSearchResult from "~/components/elements/Loading/LoadingSearchResult";

const breadcrumb = [
    {
        text: "Inicio",
        url: "/",
    },
    {
        text: "Tienda",
        url: "/shopping-cart",
    },
    {
        text: "Lista de deseos",
    },
];

const WishlistScreen = ({ ecomerce }) => {
    const router = useRouter();
    const { loading, products, getProducts } = useEcomerce();
    const dispatch = useDispatch();
    const [selectAll, setSelectAll] = useState(false);
    const [selectItem, setSelectItem] = useState(false);
    const [itemsListWish, setItemsListWish] = useState([]);
    const [arrayItems, setArrayItems] = useState([]);
    const [showModalMensajes, setShowModalMensajes] = useState(false);
    const [tituloMensajes, setTituloMensajes] = useState(false);
    const [textoMensajes, setTextoMensajes] = useState(false);
    const [isLoading, setIsLoading] = useState(true);
    const [classEliminarAll, setClassEliminarAll] = useState("textoreliminartodowishlist");

    // Asignamos Datos al arreglo de Usuarios desde el state
    const datosusuarios = useSelector((state) => state.userlogged.userlogged);
    let numberitemswishlist = useSelector(
        (state) => state.wishlist.datawishlist
    );

    const verProduct = (dat) => {
        let ruta = "/product/" + dat;
        router.push(ruta);
    };

    useEffect(() => {
        const leerItems = async () => {
            let params = {
                usuario: datosusuarios.uid,
            };

            await axios({
                method: "post",
                url: URL_BD_MR + "54",
                params,
            })
                .then((res) => {
                    //console.log("DAT WISH LIST: ", res.data.listaritemdeseos);
                    setItemsListWish(res.data.listaritemdeseos);
                    dispatch(getDataWishList(res.data.listaritemdeseos.length));
                })
                .catch(function (error) {
                    console.log("Error leyendo datos lista deseos");
                });
        };
        leerItems();
    }, [numberitemswishlist, isLoading, datosusuarios]);
    // view
    let totalView, wishListView;
    if (products && products.length > 0) {
        totalView = caculateArrayQuantity(products);
        wishListView = <ModuleEcomerceWishlist source={products} />;
    } else {
        if (loading) {
            wishListView = <SkeletonTable rows={1} />;
        } else {
            wishListView = (
                <Result
                    status="warning"
                    title="NingÃºn producto en su lista de deseos."
                />
            );
        }
    }

    const borrarTodosItems = () => {
        const borrarAllItems = async () => {
            let params = {
                usuario: datosusuarios.uid,
            };

            await axios({
                method: "post",
                url: URL_BD_MR + "55",
                params,
            })
                .then((res) => {
                    setShowModalMensajes(true);
                    setTituloMensajes("Lista de deseos");
                    let texto =
                        "Se eliminaron " +
                        numberitemswishlist +
                        " productos de la lista de deseos";
                    setTextoMensajes(texto);
                    numberitemswishlist = 0;
                    setArrayItems([]);
                    setSelectAll(false);
                    dispatch(getDataWishList(0));
                    setItemsListWish([]);
                    //location.reload();
                })
                .catch(function (error) {
                    console.log("Error leyendo datos lista deseos");
                });
        };
        borrarAllItems();
    };

    const borrarUnItem = (item) => {
        let borrar = true;
        const borrarAllItems = async () => {
            let params = {
                usuario: datosusuarios.uid,
                idproducto: item,
            };

            //console.log("DAT XX : ", params);
            await axios({
                method: "post",
                url: URL_BD_MR + "56",
                params,
            })
                .then((res) => {
                    console.log("OK Borrando item lista deseos: ", res);
                    if (res.data.type == 1) {
                        const leerItems = async () => {
                            let params = {
                                usuario: datosusuarios.uid,
                            };

                            await axios({
                                method: "post",
                                url: URL_BD_MR + "54",
                                params,
                            })
                                .then((res) => {
                                    //console.log("LONGITUD : ", res.data.listaritemdeseos.length);
                                    setItemsListWish(res.data.listaritemdeseos);
                                    dispatch(
                                        getDataWishList(
                                            res.data.listaritemdeseos.length
                                        )
                                    );
                                })
                                .catch(function (error) {
                                    console.log(
                                        "Error leyendo datos lista deseosXXX"
                                    );
                                });
                        };
                        leerItems();
                    }
                })
                .catch(function (error) {
                    borrar = false;
                    console.log("Error leyendo datos lista deseos000");
                });
        };
        borrarAllItems();

        if (borrar) {
            setShowModalMensajes(true);
            setTituloMensajes("Lista de deseos");
            let texto = "Productos eliminados de la lista de deseos";
            setTextoMensajes(texto);
            setArrayItems([]);
            setSelectAll(false);
        }
    };

    /*
    const borrarUnItem = () => {
        let borrar = true;
        arrayItems &&
            arrayItems.map((row, index) => {
                const borrarAllItems = async () => {
                    let params = {
                        usuario: datosusuarios.uid,
                        idproducto: row,
                    };

                    //console.log("DAT XX : ", params);
                    await axios({
                        method: "post",
                        url: URL_BD_MR + "56",
                        params,
                    })
                        .then((res) => {
                            console.log("OK Borrando item lista deseos: ", res);
                            if (res.data.type == 1) {
                                const leerItems = async () => {
                                    let params = {
                                        usuario: datosusuarios.uid,
                                    };

                                    await axios({
                                        method: "post",
                                        url: URL_BD_MR + "54",
                                        params,
                                    })
                                        .then((res) => {
                                            //console.log("LONGITUD : ", res.data.listaritemdeseos.length);
                                            setItemsListWish(
                                                res.data.listaritemdeseos
                                            );
                                            dispatch(
                                                getDataWishList(
                                                    res.data.listaritemdeseos
                                                        .length
                                                )
                                            );
                                        })
                                        .catch(function (error) {
                                            console.log(
                                                "Error leyendo datos lista deseosXXX"
                                            );
                                        });
                                };
                                leerItems();
                            }
                        })
                        .catch(function (error) {
                            borrar = false;
                            console.log("Error leyendo datos lista deseos000");
                        });
                };
                borrarAllItems();
            });

        if (borrar) {
            setShowModalMensajes(true);
            setTituloMensajes("Lista de deseos");
            let texto = "Productos eliminados de la lista de deseos";
            setTextoMensajes(texto);
            setArrayItems([]);
            setSelectAll(false);
        }
    };
    */

    const selectItemsAll = () => {
        setArrayItems([]);
        let array = [];
        itemsListWish &&
            itemsListWish.map((row, index) => {
                array.push(row.idproducto);
            });
        setArrayItems(array);
        setSelectAll(true);
    };

    const deleteItemsAll = () => {
        setArrayItems([]);
        setSelectAll(false);
    };

    const selectItems = (item) => {
        let array = [];
        array.push(item);
        arrayItems &&
            arrayItems.map((row, index) => {
                array.push(row);
            });
        //console.log("ITEMS SEL : ", array);
        setArrayItems(array);
    };

    const unSelectItems = (item) => {
        let nvoarray = arrayItems;
        let nvo = [];

        nvoarray &&
            nvoarray.map((row, index) => {
                if (row != item) {
                    nvo.push(row);
                }
            });
        setArrayItems(nvo);
    };

    useEffect(() => {
        if (arrayItems.length > 0 ) {
            setSelectItem(true);}

        else {
            setSelectItem(false);
        }

    }, [arrayItems]);

    useEffect(() => {
        const interval = setInterval(() => {
            setIsLoading(false);
        }, 1000);
        return () => clearInterval(interval);
    }, [isLoading]);

    console.log("ITEMS SEL : ", itemsListWish, arrayItems);

    return (
        <Container title="Wishlist">
            <ModalMensajesWishList
                shown={showModalMensajes}
                close={setShowModalMensajes}
                titulo={tituloMensajes}
                mensaje={textoMensajes}
                tipo="1"
            />

            <div className="ps-page ps-page--inner">
                <div className="container">
                    <div className="ps-page__header">
                        <div className="ml-50">
                            <BreadCrumb breacrumb={breadcrumb} />
                        </div>

                        {isLoading ? (
                            <LoadingSearchResult />
                        ) : (
                            <div>
                                <Grid container alignItems="center" spacing={1}>
                                <Grid item xs={4} md={4} lg={4}>
                                        <div className="textoresultprod">
                                            Lista de deseos
                                        </div>
                                    </Grid>
                                </Grid>

                                <Grid container alignItems="center" spacing={1}>
                                    <Grid item xs={1} md={1} lg={1}>
                                        <div>
                                            {!selectAll ? (
                                                <i
                                                    onClick={() =>
                                                        selectItemsAll()
                                                    }
                                                    className="checklistachequeo fa fa-square-o apuntador"
                                                    aria-hidden="true"></i>
                                            ) : (
                                                <i
                                                    onClick={() =>
                                                        deleteItemsAll()
                                                    }
                                                    className="checklistachequeo fa fa-check-square-o apuntador"
                                                    aria-hidden="true"></i>
                                            )}
                                        </div>
                                    </Grid>
                                    <Grid item xs={4} md={4} lg={4}>
                                        <div className={classEliminarAll}>
                                            Eliminar producto(s) seleccionados
                                        </div>
                                    </Grid>
                                    <Grid item xs={4} md={4} lg={4}>
                                        {selectAll ? (
                                            <h2
                                                className="borrartodositems apuntador"
                                                onClick={() =>
                                                    borrarTodosItems()
                                                }>
                                                Borrar todo
                                            </h2>
                                        ) : null}
                                    </Grid>
                                    <Grid item xs={3} md={3} lg={3}>
                                        <div className="numeroprodlistadeseo">
                                            Productos en lista de deseo:{" "}
                                            {itemsListWish.length}
                                        </div>
                                    </Grid>
                                </Grid>

                                {itemsListWish.length > 0
                                    ? itemsListWish &&
                                      itemsListWish.map((item, index) => {
                                          return (
                                              <div>
                                                  <Grid
                                                      container
                                                      alignItems="center"
                                                      spacing={1}>
                                                      <Grid
                                                          item
                                                          xs={12}
                                                          md={12}
                                                          lg={12}>
                                                          <div className="linealistadeseo"></div>
                                                      </Grid>
                                                      <Grid
                                                          item
                                                          xs={1}
                                                          md={1}
                                                          lg={1}>
                                                          <div>
                                                              {arrayItems.includes(
                                                                  item.idproducto
                                                              ) ? (
                                                                  <i
                                                                      onClick={() =>
                                                                          unSelectItems(
                                                                              item.idproducto
                                                                          )
                                                                      }
                                                                      className="checklistachequeo 
                                                                         fa fa-check-square-o
                                                                         apuntador"
                                                                      aria-hidden="true"></i>
                                                              ) : (
                                                                  <i
                                                                      onClick={() =>
                                                                          selectItems(
                                                                              item.idproducto
                                                                          )
                                                                      }
                                                                      className="checklistachequeo
                                                                         fa fa-square-o
                                                                         apuntador"
                                                                      aria-hidden="true"></i>
                                                              )}
                                                          </div>
                                                      </Grid>
                                                      <Grid
                                                          item
                                                          xs={2}
                                                          md={2}
                                                          lg={2}>
                                                          <img
                                                              className="imagelistadeseo apuntador"
                                                              onClick={() =>
                                                                  verProduct(
                                                                      item.idproducto
                                                                  )
                                                              }
                                                              src={
                                                                  URL_IMAGES_RESULTS +
                                                                  item.nombreimagen1
                                                              }
                                                              alt="First slide"
                                                          />
                                                      </Grid>
                                                      <Grid
                                                          item
                                                          xs={6}
                                                          md={6}
                                                          lg={6}>
                                                          <div className="mlmenos90">
                                                              <Grid
                                                                  item
                                                                  xs={12}
                                                                  md={12}
                                                                  lg={12}>
                                                                  <div
                                                                      className="textotitulolistadeseo apuntador"
                                                                      onClick={() =>
                                                                          verProduct(
                                                                              item.idproducto
                                                                          )
                                                                      }>
                                                                      {
                                                                          item.titulonombre
                                                                      }
                                                                  </div>
                                                              </Grid>
                                                              <Grid
                                                                  item
                                                                  xs={12}
                                                                  md={12}
                                                                  lg={12}>
                                                                  <div className="formatopreciolistadeseo">
                                                                      ${" "}
                                                                      {myNumber(
                                                                          1,
                                                                          item.precio,
                                                                          2
                                                                      )}
                                                                  </div>
                                                              </Grid>
                                                              <Grid
                                                                  item
                                                                  xs={12}
                                                                  md={12}
                                                                  lg={12}>
                                                                  <div className="textounidadeslistadeseo">
                                                                      Unidades
                                                                      disponible:{" "}
                                                                      {myNumber(
                                                                          1,
                                                                          item.numerodeunidades,
                                                                          2
                                                                      )}
                                                                  </div>
                                                              </Grid>
                                                              <Grid
                                                                  item
                                                                  xs={12}
                                                                  md={12}
                                                                  lg={12}>
                                                                  <div
                                                                      className="botoneliminarlistadeseo apuntador"
                                                                      onClick={() =>
                                                                          borrarUnItem(
                                                                              item.idproducto
                                                                          )
                                                                      }>
                                                                      Eliminar
                                                                  </div>
                                                              </Grid>
                                                          </div>
                                                      </Grid>
                                                      <Grid
                                                          item
                                                          xs={1}
                                                          md={1}
                                                          lg={1}>
                                                          <div
                                                              className="cajaagregarcarrito apuntador"
                                                              href="#">
                                                              Agregar al carrito
                                                          </div>{" "}
                                                      </Grid>
                                                      {itemsListWish.length ==
                                                      index + 1 ? (
                                                          <Grid
                                                              item
                                                              xs={12}
                                                              md={12}
                                                              lg={12}>
                                                              <div className="linealistadeseo"></div>
                                                          </Grid>
                                                      ) : null}
                                                  </Grid>
                                              </div>
                                          );
                                      })
                                    : null}
                            </div>
                        )}
                    </div>
                    {
                        //<div className="ps-page__content">{wishListView}</div>
                    }
                </div>
            </div>
        </Container>
    );
};
export default WishlistScreen;
